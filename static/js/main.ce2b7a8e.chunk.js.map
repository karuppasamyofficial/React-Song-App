{"version":3,"sources":["reducers/index.js","compontents/Songlist.js","actions/index.js","compontents/SongDetail.js","compontents/App.js","index.js"],"names":["combineReducers","song","title","duration","selectedsong","onseletedsong","arguments","length","undefined","action","type","payload","Songlist","_this","this","console","log","props","songs","map","react_default","a","createElement","className","key","onClick","selectSong","renderlist","React","Component","connect","state","_ref","App","compontents_Songlist","compontents_SongDetail","ReactDOM","render","es","store","createStore","reducers","compontents_App","document","querySelector"],"mappings":"sLA6BiBA,cAAgB,CAChCC,KA3BiB,WAGd,MAAM,CAAC,CAACC,MAAM,QAAQC,SAAS,QAC3B,CAAED,MAAO,SAAUC,SAAU,QAC7B,CAAED,MAAO,UAAWC,SAAU,UAuBlCC,aAdsB,WAA6B,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,KAAKG,EAASH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEnD,MAAoB,iBAAhBC,EAAOC,KAEAD,EAAOE,QAEXN,6CChBLO,uLACU,IAAAC,EAAAC,KAEZ,OADEC,QAAQC,IAAI,QAASF,KAAKG,MAAMC,OAC3BJ,KAAKG,MAAMC,MAAMC,IAAI,SAAAlB,GAC1B,OACEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKvB,EAAKC,OAC9BkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAGbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAqBE,QAAS,WAAKZ,EAAKI,MAAMS,WAAWzB,KAA3E,UAEAmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWtB,EAAKC,4CAUrC,OAAQkB,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,IAAmCT,KAAKa,sBAtB3BC,IAAMC,WAiCdC,cALQ,SAAAC,GAErB,OADEhB,QAAQC,IAAIe,GACP,CAAEb,MAAOa,EAAM9B,OAGe,CAAEyB,WCpCf,SAACzB,GAGvB,MAAO,CACLS,KAAM,eACNC,QAASV,KD+BA6B,CAAuClB,GEtBvCkB,cAPO,SAACC,GAEpB,MAAO,CAAE9B,KAAM8B,EAAM3B,eAKT0B,CAfI,SAAAE,GAAW,IAAR/B,EAAQ+B,EAAR/B,KAElB,OAAKA,EAGEmB,EAAAC,EAAAC,cAAA,WAAMrB,EAAKC,OAFPkB,EAAAC,EAAAC,cAAA,iCCkBAW,EAdL,WAEN,OAEIb,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,WACYF,EAAAC,EAAAC,cAACY,EAAD,OAEZd,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACa,EAAD,SCTLC,IAASC,OACLjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IACzBrB,EAAAC,EAAAC,cAACoB,EAAD,OAEFC,SAASC,cAAc","file":"static/js/main.ce2b7a8e.chunk.js","sourcesContent":["\r\nimport {combineReducers} from 'redux';\r\n\r\nconst songReducer=()=>{\r\n\r\n\r\n    return[{title:'tamil',duration:'1.00'},\r\n        { title: 'telngu', duration: '1.00'},\r\n        { title: 'english', duration: '1.00'}\r\n        \r\n\r\n\r\n\r\n    ];\r\n}\r\n;\r\n\r\nconst selectedsongReducer=(onseletedsong=null,action)=>{\r\n\r\n    if (action.type === \"SONG_SELECTE\") {\r\n\r\n        return action.payload;\r\n    }\r\n    return onseletedsong;\r\n};\r\n\r\n\r\n\r\n\r\nexport   default combineReducers({\r\n song: songReducer,\r\n    selectedsong:  selectedsongReducer\r\n\r\n});","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport {selectSong} from '../actions';\r\n\r\nclass Songlist extends React.Component {\r\n  renderlist () {\r\n      console.log(\"----?\", this.props.songs);\r\n    return this.props.songs.map(song => {\r\n      return (\r\n        <div className=\"item\" key={song.title}>\r\n          <div className=\"right floated content\">\r\n\r\n                \r\n            <button className=\"ui button primary\"  onClick={()=>{this.props.selectSong(song)}} >select</button>\r\n\r\n            <div className=\"content\">{song.title}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    \r\n      return (<div >\r\n          <div className=\"ui divided list\"> {this.renderlist()}</div>\r\n      </div>);\r\n      \r\n  }\r\n}\r\n\r\nconst mapStateToProp = state => {\r\n    console.log(state);\r\n  return { songs: state.song};\r\n};\r\n\r\nexport default connect(mapStateToProp, { selectSong})(Songlist);\r\n","\r\n\r\n//Ation creator \r\n\r\n  export const selectSong=(song)=>{\r\n\r\n//return the action \r\n    return {\r\n      type: \"SONG_SELECTE\",\r\n      payload: song\r\n    };\r\n}\r\n;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SongDetail = ({ song})=>{\r\n\r\n    if (!song){\r\n        return <div>select something</div>;\r\n    }\r\n    return <div>{song.title}</div>;\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n\r\n   return { song: state.selectedsong}\r\n\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from \"react\";\r\n\r\nimport actions from '../actions';\r\n\r\nimport Songlist from './Songlist';\r\n\r\nimport { selectSong } from '../actions';\r\nimport SongDetail from \"./SongDetail\";\r\n\r\n\r\nconst App=()=>{\r\n\r\n    return(\r\n\r\n        <div>\r\n<div>\r\n            <Songlist/>\r\n</div>\r\n<div><SongDetail/></div>\r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport  reducers  from './reducers';\r\nimport { createStore } from \"redux\";\r\n\r\n\r\nimport App from './compontents/App';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App/>\r\n </Provider> \r\n    , document.querySelector('#root'));"],"sourceRoot":""}